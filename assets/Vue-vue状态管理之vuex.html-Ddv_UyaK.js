import{_ as s,c as n,o as a,a as e}from"./app-f2Cpj3V4.js";const p="/images/vuex_vuejs_org_vuex.png",t={},o=e('<p>原文链接: <a href="https://interview.poetries.top/principle-docs/vue/14-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html" target="_blank" rel="noopener noreferrer">https://interview.poetries.top/principle-docs/vue/14-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html</a></p><blockquote><p>了解vuex核心概念请移步 https://vuex.vuejs.org/zh/</p></blockquote><p><img src="'+p+`" alt="img"></p><h2 id="一、初始vuex" tabindex="-1"><a class="header-anchor" href="#一、初始vuex"><span>一、初始vuex</span></a></h2><h3 id="_1-1-vuex是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-vuex是什么"><span>1.1 vuex是什么</span></a></h3><blockquote><ul><li></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"> </span>
<span class="line">    <span class="token operator">&gt;</span>     vuex</span>
<span class="line"> </span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就是把需要共享的变量全部存储在一个对象里面，然后将这个对象放在顶层组件中供其他组件使用</p><pre><code>* 父子组件通信时，我们通常会采用 \`props + emit\`
</code></pre><p>这种方式。但当通信双方不是父子组件甚至压根不存在相关联系，或者一个状态需要共享给多个组件时，就会非常麻烦，数据也会相当难维护</p></blockquote><h3 id="_1-2-vuex中有什么" tabindex="-1"><a class="header-anchor" href="#_1-2-vuex中有什么"><span>1.2 vuex中有什么</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;weish&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">personInfo</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>state<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, I am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>state<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token constant">SET_AGE</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">commit</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">nameAsyn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>commit<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_AGE&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">a</span><span class="token operator">:</span> modulesA</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>个就是最基本也是完整的<code>vuex</code>代码；<code>vuex</code> 包含有五个基本的对象</p></blockquote><ul><li><code>state</code>：存储状态。也就是变量；</li><li><code>getters</code>：派生状态。也就是<code>set</code>、<code>get</code>中的<code>get</code>，有两个可选参数：<code>state</code>、<code>getters</code>分别可以获取<code>state</code>中的变量和其他的<code>getters</code>。外部调用方式：<code>store.getters.personInfo()</code>。就和<code>vue</code>的<code>computed</code>差不多；</li><li><code>mutations</code>：提交状态修改。也就是<code>set</code>、<code>get</code>中的<code>set</code>，这是<code>vuex</code>中唯一修改<code>state</code>的方式，但不支持异步操作。第一个参数默认是<code>state</code>。外部调用方式：<code>store.commit(&#39;SET_AGE&#39;, 18)</code>。和<code>vue</code>中的<code>methods</code>类似。</li><li><code>actions</code>：和<code>mutations</code>类似。不过<code>actions</code>支持异步操作。第一个参数默认是和<code>store</code>具有相同参数属性的对象。外部调用方式：<code>store.dispatch(&#39;nameAsyn&#39;)</code>。</li><li><code>modules</code>：<code>store</code>的子模块，内容就相当于是<code>store</code>的一个实例。调用方式和前面介绍的相似，只是要加上当前子模块名，如：<code>store.a.getters.xxx()</code></li></ul><h3 id="_1-3-vue-cli中使用vuex的方式" tabindex="-1"><a class="header-anchor" href="#_1-3-vue-cli中使用vuex的方式"><span>1.3 vue-cli中使用vuex的方式</span></a></h3><p><strong>目录结构</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    ├── index<span class="token punctuation">.</span>html</span>
<span class="line">    ├── main<span class="token punctuation">.</span>js</span>
<span class="line">    ├── components</span>
<span class="line">    └── store</span>
<span class="line">        ├── index<span class="token punctuation">.</span>js          # 我们组装模块并导出 store 的地方</span>
<span class="line">        ├── state<span class="token punctuation">.</span>js          # 跟级别的 state</span>
<span class="line">        ├── getters<span class="token punctuation">.</span>js        # 跟级别的 getter</span>
<span class="line">        ├── mutation<span class="token operator">-</span>types<span class="token punctuation">.</span>js # 根级别的mutations名称（官方推荐mutions方法名使用大写）</span>
<span class="line">        ├── mutations<span class="token punctuation">.</span>js      # 根级别的 mutation</span>
<span class="line">        ├── actions<span class="token punctuation">.</span>js        # 根级别的 action</span>
<span class="line">        └── modules</span>
<span class="line">            ├── m1<span class="token punctuation">.</span>js         # 模块<span class="token number">1</span></span>
<span class="line">            └── m2<span class="token punctuation">.</span>js         # 模块<span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>state示例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;weish&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">22</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> state<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>getter示例</strong></p><blockquote><p><code>getters.js</code>示例（我们一般使用<code>getters</code>来获取<code>state</code>的状态，而不是直接使用<code>state</code>）</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">name</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> state<span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">age</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> state<span class="token punctuation">.</span>age</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">other</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>state<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, I am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>state<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>mutation-type示例</strong></p><blockquote><p>将所有<code>mutations</code>的函数名放在这个文件里</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SET_NAME</span> <span class="token operator">=</span> <span class="token string">&#39;SET_NAME&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">SET_AGE</span> <span class="token operator">=</span> <span class="token string">&#39;SET_AGE&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>mutations示例</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> types <span class="token keyword">from</span> <span class="token string">&#39;./mutation-type.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">[</span>types<span class="token punctuation">.</span><span class="token constant">SET_NAME</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            state<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span>types<span class="token punctuation">.</span><span class="token constant">SET_AGE</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            state<span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>actions示例</strong></p><blockquote><p>异步操作、多个<code>commit</code>时</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> types <span class="token keyword">from</span> <span class="token string">&#39;./mutation-type.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">nameAsyn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>commit<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>age<span class="token punctuation">,</span> name<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">commit</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span><span class="token constant">SET_NAME</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">commit</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span><span class="token constant">SET_AGE</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>modules–m1.js示例</strong></p><blockquote><p>如果不是很复杂的应用，一般来讲是不会分模块的</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>index.js示例（组装vuex)</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> state <span class="token keyword">from</span> <span class="token string">&#39;./state.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> getters <span class="token keyword">from</span> <span class="token string">&#39;./getters.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">&#39;./mutations.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> actions <span class="token keyword">from</span> <span class="token string">&#39;./actions.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> m1 <span class="token keyword">from</span> <span class="token string">&#39;./modules/m1.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> m2 <span class="token keyword">from</span> <span class="token string">&#39;./modules/m2.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">import</span> createLogger <span class="token keyword">from</span> <span class="token string">&#39;vuex/dist/logger&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 修改日志</span></span>
<span class="line">    </span>
<span class="line">    vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> debug <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 开发环境中为true，否则为false</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        state<span class="token punctuation">,</span></span>
<span class="line">        getters<span class="token punctuation">,</span></span>
<span class="line">        mutations<span class="token punctuation">,</span></span>
<span class="line">        actions<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            m1<span class="token punctuation">,</span></span>
<span class="line">            m2</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">plugins</span><span class="token operator">:</span> debug <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token function">createLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 开发环境下显示vuex的状态修改</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>最后将<code>store</code>实例挂载到<code>main.js</code>里面的<code>vue</code>上去就行了</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store/index.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      store<span class="token punctuation">,</span></span>
<span class="line">      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在<code>vue</code>组件中使用时，我们通常会使用<code>mapGetters</code>、<code>mapActions</code>、<code>mapMutations</code>，然后就可以按照<code>vue</code>调用<code>methods</code>和<code>computed</code>的方式去调用这些变量或函数，示例如</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> <span class="token punctuation">{</span>mapGetters<span class="token punctuation">,</span> mapMutations<span class="token punctuation">,</span> mapActions<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">/* 只写组件中的script部分 */</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">                name<span class="token punctuation">,</span></span>
<span class="line">                age</span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">setName</span><span class="token operator">:</span> <span class="token string">&#39;SET_NAME&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">setAge</span><span class="token operator">:</span> <span class="token string">&#39;SET_AGE&#39;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">                nameAsyn</span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、modules" tabindex="-1"><a class="header-anchor" href="#二、modules"><span>二、modules</span></a></h2><blockquote><p>在 src 目录下 , 新建一个 store 文件夹 , 然后在里面新建一个 index.js</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line">    <span class="token keyword">import</span> vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span></span>
<span class="line">    Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在 <code>main.js</code> 里的代码应该改成,在实例化 <code>Vue</code>对象时加入 <code>store</code> 对象</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token comment">//vuex</span></span>
<span class="line">    <span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      router<span class="token punctuation">,</span></span>
<span class="line">      store<span class="token punctuation">,</span><span class="token comment">//使用store</span></span>
<span class="line">      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;&lt;App/&gt;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这样就把 <code>store</code> 分离出去了 , 那么还有一个问题是 : 这里 <code>$store.state.show</code> 无论哪个组件都可以使用 , 那组件多了之后 , 状态也多了 , 这么多状态都堆在 store 文件夹下的 <code>index.js</code> 不好维护怎么办 ?</p></blockquote><ul><li>我们可以使用 <code>vuex</code> 的 <code>modules</code> , 把 <code>store</code> 文件夹下的 <code>index.js</code> 改成</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line">    <span class="token keyword">import</span> vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span></span>
<span class="line">    Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">import</span> dialog_store <span class="token keyword">from</span> <span class="token string">&#39;../components/dialog_store.js&#39;</span><span class="token punctuation">;</span><span class="token comment">//引入某个store对象</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">dialog</span><span class="token operator">:</span> dialog_store</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这里我们引用了一个 <code>dialog_store.js</code> , 在这个 <code>js</code>文件里我们就可以单独写 <code>dialog</code> 组件的状态了</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>做出这样的修改之后 , 我们将之前我们使用的 <code>$store.state.show</code> 统统改为 <code>$store.state.dialog.show</code> 即可</p></blockquote><ul><li>如果还有其他的组件需要使用 <code>vuex</code> , 就新建一个对应的状态文件 , 然后将他们加入 <code>store</code>文件夹下的 <code>index.js</code>文件中的 <code>modules</code> 中</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">dialog</span><span class="token operator">:</span> dialog_store<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">other</span><span class="token operator">:</span> other<span class="token punctuation">,</span><span class="token comment">//其他组件</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、mutations" tabindex="-1"><a class="header-anchor" href="#三、mutations"><span>三、mutations</span></a></h2><blockquote><p>对<code>vuex</code> 的依赖仅仅只有一个 <code>$store.state.dialog.show</code> 一个状态 , 但是如果我们要进行一个操作 , 需要依赖很多很多个状态 , 那管理起来又麻烦了</p></blockquote><ul><li><code>mutations</code>里的操作必须是同步的</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token comment">//state</span></span>
<span class="line">            <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">switch_dialog</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//这里的state对应着上面这个state</span></span>
<span class="line">                state<span class="token punctuation">.</span>show <span class="token operator">=</span> state<span class="token punctuation">.</span>show<span class="token operator">?</span><span class="token boolean">false</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//你还可以在这里执行其他的操作改变state</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用 <code>mutations</code> 后 , 原先我们的父组件可以改为</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:;&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;$store.commit(&#39;switch_dialog&#39;)&quot;</span><span class="token operator">&gt;</span>点击<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>t<span class="token operator">-</span>dialog<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>t<span class="token operator">-</span>dialog<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">import</span> dialog <span class="token keyword">from</span> <span class="token string">&#39;./components/dialog.vue&#39;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&quot;t-dialog&quot;</span><span class="token operator">:</span>dialog</span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用 <code>$store.commit(&#39;switch_dialog&#39;)</code> 来触发 <code>mutations</code> 中的 <code>switch_dialog</code> 方法</p></blockquote><h2 id="四、actions" tabindex="-1"><a class="header-anchor" href="#四、actions"><span>四、actions</span></a></h2><blockquote><p>多个 <code>state</code> 的操作 , 使用 <code>mutations</code>会来触发会比较好维护 , 那么需要执行多个 <code>mutations</code> 就需要用 <code>action</code> 了</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token comment">//state</span></span>
<span class="line">            <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">switch_dialog</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//这里的state对应着上面这个state</span></span>
<span class="line">                state<span class="token punctuation">.</span>show <span class="token operator">=</span> state<span class="token punctuation">.</span>show<span class="token operator">?</span><span class="token boolean">false</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//你还可以在这里执行其他的操作改变state</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">switch_dialog</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//这里的context和我们使用的$store拥有相同的对象和方法</span></span>
<span class="line">                context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;switch_dialog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//你还可以在这里触发其他的mutations方法</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>那么 , 在之前的父组件中 , 我们需要做修改 , 来触发 <code>action</code> 里的 <code>switch_dialog</code> 方法</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:;&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;$store.dispatch(&#39;switch_dialog&#39;)&quot;</span><span class="token operator">&gt;</span>点击<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>t<span class="token operator">-</span>dialog<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>t<span class="token operator">-</span>dialog<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">import</span> dialog <span class="token keyword">from</span> <span class="token string">&#39;./components/dialog.vue&#39;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&quot;t-dialog&quot;</span><span class="token operator">:</span>dialog</span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 <code>$store.dispatch(&#39;switch_dialog&#39;)</code> 来触发 <code>action</code> 中的 <code>switch_dialog</code> 方法。</li><li>官方推荐 , 将异步操作放在 <code>action</code>中</li></ul><h2 id="五、getters" tabindex="-1"><a class="header-anchor" href="#五、getters"><span>五、getters</span></a></h2><blockquote><p><code>getters</code>和 <code>vue</code> 中的<code>computed</code> 类似 , 都是用来计算 <code>state</code> 然后生成新的数据 ( 状态 ) 的</p></blockquote><ul><li>假如我们需要一个与状态 <code>show</code> 刚好相反的状态 , 使用 <code>vue</code> 中的 <code>computed</code> 可以这样算出来</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">not_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>dialog<span class="token punctuation">.</span>show<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>那么 , 如果很多很多个组件中都需要用到这个与 <code>show</code>刚好相反的状态 , 那么我们需要写很多很多个 <code>not_show</code>, 使用 <code>getters</code>就可以解决这种问题</p></blockquote><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token comment">//state</span></span>
<span class="line">            <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">getters</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">not_show</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//这里的state对应着上面这个state</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token operator">!</span>state<span class="token punctuation">.</span>show<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">mutations</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">switch_dialog</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//这里的state对应着上面这个state</span></span>
<span class="line">                state<span class="token punctuation">.</span>show <span class="token operator">=</span> state<span class="token punctuation">.</span>show<span class="token operator">?</span><span class="token boolean">false</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//你还可以在这里执行其他的操作改变state</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">actions</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">switch_dialog</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//这里的context和我们使用的$store拥有相同的对象和方法</span></span>
<span class="line">                context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;switch_dialog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">//你还可以在这里触发其他的mutations方法</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>我们在组件中使用 <code>$store.state.dialog.show</code> 来获得状态 <code>show</code> , 类似的 , 我们可以使用 <code>$store.getters.not_show</code> 来获得状态 <code>not_show</code></p></blockquote><ul><li>注意 : <code>$store.getters.not_show</code> 的值是不能直接修改的 , 需要对应的 <code>state</code> 发生变化才能修改</li></ul><h2 id="六、mapstate、mapgetters、mapactions" tabindex="-1"><a class="header-anchor" href="#六、mapstate、mapgetters、mapactions"><span>六、mapState、mapGetters、mapActions</span></a></h2><blockquote><p>很多时候 , <code>$store.state.dialog.show</code> 、<code>$store.dispatch(&#39;switch_dialog&#39;)</code> 这种写法很不方便</p></blockquote><ul><li>使用 <code>mapState</code>、<code>mapGetters</code>、<code>mapActions</code> 就不会这么复杂了</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">&quot;show&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">import</span> <span class="token punctuation">{</span>mapState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">        <span class="token comment">//这里的三点叫做 : 扩展运算符</span></span>
<span class="line">        <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">          <span class="token function-variable function">show</span><span class="token operator">:</span><span class="token parameter">state</span><span class="token operator">=&gt;</span>state<span class="token punctuation">.</span>dialog<span class="token punctuation">.</span>show</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相当于</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>el<span class="token operator">-</span>dialog <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">&quot;show&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>dialog<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">import</span> <span class="token punctuation">{</span>mapState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>dialog<span class="token punctuation">.</span>show<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>mapGetters</code>、<code>mapActions</code> 和 <code>mapState</code> 类似 , <code>mapGetters</code> 一般也写在 <code>computed</code> 中 , <code>mapActions</code> 一般写在 <code>methods</code> 中</p></blockquote><p>阅读全文</p>`,77),l=[o];function c(i,r){return a(),n("div",null,l)}const d=s(t,[["render",c],["__file","Vue-vue状态管理之vuex.html.vue"]]),k=JSON.parse('{"path":"/Vue-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html","title":"","lang":"zh-CN","frontmatter":{"description":"原文链接: https://interview.poetries.top/principle-docs/vue/14-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html 了解vuex核心概念请移步 https://vuex.vuejs.org/zh/ img 一、初始vuex 1.1 vu...","head":[["meta",{"property":"og:url","content":"https://interview.leeguoo.com/Vue-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html"}],["meta",{"property":"og:site_name","content":"前端面试题集锦"}],["meta",{"property":"og:description","content":"原文链接: https://interview.poetries.top/principle-docs/vue/14-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html 了解vuex核心概念请移步 https://vuex.vuejs.org/zh/ img 一、初始vuex 1.1 vu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://interview.leeguoo.com/images/vuex_vuejs_org_vuex.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-05T18:28:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-05T18:28:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"https://interview.leeguoo.com/images/vuex_vuejs_org_vuex.png\\"],\\"dateModified\\":\\"2024-06-05T18:28:42.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、初始vuex","slug":"一、初始vuex","link":"#一、初始vuex","children":[{"level":3,"title":"1.1 vuex是什么","slug":"_1-1-vuex是什么","link":"#_1-1-vuex是什么","children":[]},{"level":3,"title":"1.2 vuex中有什么","slug":"_1-2-vuex中有什么","link":"#_1-2-vuex中有什么","children":[]},{"level":3,"title":"1.3 vue-cli中使用vuex的方式","slug":"_1-3-vue-cli中使用vuex的方式","link":"#_1-3-vue-cli中使用vuex的方式","children":[]}]},{"level":2,"title":"二、modules","slug":"二、modules","link":"#二、modules","children":[]},{"level":2,"title":"三、mutations","slug":"三、mutations","link":"#三、mutations","children":[]},{"level":2,"title":"四、actions","slug":"四、actions","link":"#四、actions","children":[]},{"level":2,"title":"五、getters","slug":"五、getters","link":"#五、getters","children":[]},{"level":2,"title":"六、mapState、mapGetters、mapActions","slug":"六、mapstate、mapgetters、mapactions","link":"#六、mapstate、mapgetters、mapactions","children":[]}],"git":{"updatedTime":1717612122000,"contributors":[{"name":"guoli","email":"guoli@zhihu.com","commits":2}]},"autoDesc":true,"filePathRelative":"Vue-vue状态管理之vuex.md","excerpt":"<p>原文链接: <a href=\\"https://interview.poetries.top/principle-docs/vue/14-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://interview.poetries.top/principle-docs/vue/14-vue%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E4%B9%8Bvuex.html</a></p>\\n<blockquote>\\n<p>了解vuex核心概念请移步 https://vuex.vuejs.org/zh/</p>\\n</blockquote>"}');export{d as comp,k as data};
